singularity {
    enabled = true
}

process {
    //the executor, visit the nextflow website for more info
    executor = 'slurm'
    cpus = 
    time = ""
    maxForks = 
    clusterOptions = {
        //your acount, you need not change this if you use local executor
        '-A FALSE'
    }
	withName:bwa_aln_R1 {
		container = 'quay.io/biocontainers/bwa_0.7.3a--hed695b0_5.sif'
    }
	withName:fastqc_R1 {
                container = 'quay.io/biocontainers/fastqc_0.11.9--0.sif'
    }    
	withName:fastqc_R2 {
                container = 'quay.io/biocontainers/fastqc_0.11.9--0.sif'
    }
	withName:bwa_aln_R2 {
                container = 'quay.io/biocontainers/bwa_0.7.3a--hed695b0_5.sif'
    }
	withName:bwa_sampe {
                container = 'quay.io/biocontainers/bwa_0.7.3a--hed695b0_5.sif'
    }
	withName: samtools_sort {
		container = 'quay.io/biocontainers/samtools_1.14--hb421002_0.sif'
    }
	withName: picard_md {
                container = 'quay.io/biocontainers/picard_1.141--hdfd78af_6.sif'
    }
	withName: collect_gc_bias {
                container = 'library://jeisfeldt/default/fluffy:sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6'
    }
	withName: collect_insert_size {
                container = 'library://jeisfeldt/default/fluffy:sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6'
    }
	withName: estimate_complexity {
                container = 'library://jeisfeldt/default/fluffy:sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6'
    }
	withName: wcx_convert {
                container = 'quay.io/biocontainers/wisecondorx_1.1.5--pyh864c0ab_1.sif'
    }
	withName: wcx_predict {
                container = 'quay.io/biocontainers/wisecondorx_1.1.5--pyh864c0ab_1.sif'
    }
	withName: wcx_predict_preface {
                container = 'quay.io/biocontainers/wisecondorx_1.1.5--pyh864c0ab_1.sif'
    }
	withName: preface_predict {
                container = 'library://jeisfeldt/default/fluffy:sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6'
    }
	withName: wcx_gender {
                container = 'quay.io/biocontainers/wisecondorx_1.1.5--pyh864c0ab_1.sif'
    }
	withName: tiddit {
                container = 'quay.io/biocontainers/wisecondorx_1.1.5--pyh864c0ab_1.sif'
    }
        withName: get_gctab {
                container = 'library://jeisfeldt/default/fluffy:sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6'

    }
        withName: run_amyce {
                container = 'library://jeisfeldt/default/fluffy:sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6'
    }
	withName: summarize {
                container = 'library://jeisfeldt/default/fluffy:sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6'
		
    }
	withName: multiQC {
                container = 'quay.io/biocontainers/multiqc_1.9--pyh9f0ad1d_0.sif'
    }
}


params {
	//Path to the reference genome for read alignment
	reference = ''
	//Path to the wcx reference
	wcx_reference = ''
	//Path to folder with python scripts
	script_folder = ''
	//The size of the genome bins used by wcx	
	binsize = INT
	//
	intercept = INT
	//
	scaling = INT
	//
	Zscore = INT
	//
	minCNV = INT
	//
	Q = INT
	//
	intercept = INT
	//
	maxGCD = INT
	//
	maxATD = INT
	//
	maxbin2bin = INT
	//
	maxdup = INT
	//
	minreads = INT
	//Path to the model used in the AMYCNE step
	model = ''
	//Path to the reference used in the wcx preface predict step
	preface_wcx_reference = ''
	//
	tiddit_binsize = INT
}
