process {
    //the executor, visit the nextflow website for more info
    executor = 'slurm'
    cpus = 1
    time = "10h"
    maxForks = 20    
    containerOptions = "--bind /proj/sens2017106/reference_material/ --bind /proj/sens2017106/jesper/Fluffy_nextflow/ --bind /proj/sens2017106/Esmee/"
    clusterOptions = {
        //your acount, you need not change this if you use local executor
        '-A sens2017106'
    }
	withName:bwa_aln_R1 {
		container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/bwa_0.7.3a--hed695b0_5.sif'
		cpus = 8

    }
	withName:fastqc_R1 {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/fastqc_0.11.9--0.sif'
    }    
	withName:fastqc_R2 {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/fastqc_0.11.9--0.sif'
    }
	withName:bwa_aln_R2 {
		container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/bwa_0.7.3a--hed695b0_5.sif'
		cpus = 8

    }
	withName:bwa_sampe {
		container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/bwa_0.7.3a--hed695b0_5.sif'
		cpus = 2
    }
	withName: samtools_sort {
		container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/samtools_1.14--hb421002_0.sif'
		cpus = 8
    }
        withName: samtools_flagstat {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/samtools_1.14--hb421002_0.sif'
    }
        withName: samtools_stat {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/samtools_1.14--hb421002_0.sif'
    }
	withName: picard_md {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/picard_2.26.7--hdfd78af_0.sif'
    }
	withName: collect_gc_bias {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/picard_2.26.7--hdfd78af_0.sif'
    }
	withName: collect_insert_size {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/picard_2.26.7--hdfd78af_0.sif'
    }
	withName: estimate_complexity {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/picard_2.26.7--hdfd78af_0.sif'
    }
	withName: wcx_convert {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/wisecondorx_1.2.5--pyh5e36f6f_0.sif'
    }
	withName: wcx_predict {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/wisecondorx_1.2.5--pyh5e36f6f_0.sif'
    }
	withName: wcx_predict_preface {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/wisecondorx_1.2.5--pyh5e36f6f_0.sif'
    }
	withName: preface_predict {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/fluffy_sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6.sif'
    }
	withName: wcx_gender {
                container = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/wisecondorx_1.2.5--pyh5e36f6f_0.sif'
    }
	withName: tiddit {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/tiddit_2.12.0--py37h0498b6d_4.sif'
    }
        withName: get_gctab {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/fluffy_sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6.sif'

    }
        withName: run_amyce {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/fluffy_sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6.sif'
    }
	withName: summarize {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/fluffy_sha256.dbef92cd5eab8558c2729f73a191d73a7576a24e9bb44dde7372c0cd405c4ef6.sif'
		
    }
	withName: multiQC {
                container = '/proj/sens2017106/nobackup/wharf/esmtbdb/esmtbdb-sens2017106/multiqc_1.9--pyh9f0ad1d_0.sif'
    }
}

params {
	//Path to the reference genome for read alignment
	reference = '/proj/sens2017106/reference_material/fasta/human_g1k_v37.fasta'

	//Path to the wcx reference created using WisecondrX reference mode
	wcx_reference = '/proj/sens2017106/Esmee/output.wcxref.500000.npz'

	//Path to the blacklist bedfile used by WisecondrX
	blacklist = '/proj/sens2017106/nobackup/wharf/jesperei/jesperei-sens2017106/dsl2_fluffy/Fluffy_nextflow/resources/empty.bed'

	//Path to folder with python scripts this should be a hard link
	script_folder = '/proj/sens2017106/jesper/Fluffy_nextflow/scripts'

        //Path to the model used in the preface step
        model = 'hej'

        //Path to the reference used in the wcx preface predict step
        preface_wcx_reference = '/proj/sens2017106/Esmee/output.wcxref.500000.npz'

        //Path to a temporary directory
        tmpdir = '/tmp'

	//The size of the genome bins used by wcx	
	binsize = 500000

	//Set the intercept of FFY
	intercept = 0

	//The slope of FFY
	scaling = 2

	//Z-score of CNV segment
	Zscore = 5

	//The minumum size of the CNV segment
	minCNV = 10000000

	//Minimum average mapping quality of the bins used for copy number estimation in AMYCNE step
	Q = 15

	//Maximum GC dropout
	maxGCD = 0.05

	//Maximum AT dropout
	maxATD = 5

	//Maximum bin to bin variance
	maxbin2bin = 0.0008

	//Maximum duplication rate
	maxdup = 0.15

	//The minimum number of mapped reads
	minreads = 20000000


	//Minimum variant size, variants smaller than this will not be printed (z < 10 is not recommended)
	tiddit_binsize = 50000
	

	//Z-score cutoff to call segments as abberations for use in the wcx step
	wcxZscore = 5
}

profiles {
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
    }
}
